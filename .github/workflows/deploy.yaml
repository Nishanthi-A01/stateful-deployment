name: Publish Docker image

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: nginx-deployment

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: bnishanthi
          password: Pavithran@123

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: bnishanthi/nginx-deployment

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: set context
        run: |
          minikube start 
          kubectl config set-context minikube
      - name: k8s deployment
        run:  |
          kubectl apply -f statefulset.yaml
          kubectl get all 
      - name: Status before backup restart
        run: |
          sleep 60 && \
          kubectl get pods >> before_restart_status.txt && \
          cat before_restart_status.txt && \
          if awk '$1 == "nginx-deployment-0"{print $3}' before_restart_status.txt | grep "Running"; then \
           echo "pod is running properly"; else echo "ERROR: pod is not running properly" 1>&2; exit 1; fi; \
          if awk '$2 == "nginx-deployment-1"{print $3}' before_restart_status.txt | grep "Running"; then \
           echo "pod is running properly"; else echo "ERROR: pod is not running properly" 1>&2; exit 1; fi; \
       

          
